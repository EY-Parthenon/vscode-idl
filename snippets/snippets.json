{	
	"for-loop": {
		"prefix": "for",
		"body": [
			"for $1 = $2, $3 do begin",
			"  $4",
			"endfor$0"
		],
		"description": "For loop",
		"scope": "source.idl"
	},
	"foreach-loop": {
		"prefix": "foreach",
		"body": [
			"foreach $1, $2, $3 do begin",
			"  $4",
			"endforeach",
			"$0"
		],
		"description": "Foreach loop",
		"scope": "source.idl"
	},
	"repeat-loop": {
		"prefix": "repeat",
		"body": [
			"repeat begin",
			"  $2",
			"endrep until ($1)",
			"$0"
		],
		"description": "Repeat Loop",
		"scope": "source.idl"
	},
	"while-loop": {
		"prefix": "while",
		"body": [
			"while ($1) do begin",
			"  $2",
			"endwhile",
			"$0"
		],
		"description": "While loop",
		"scope": "source.idl"
	},
	"if-then-begin": {
		"prefix": "if",
		"body": [
			"if ($1) then begin",
			"  $2",
			"endif",
			"$0"
		],
		"description": "If then begin",
		"scope": "source.idl"
	},
	"then-begin": {
		"prefix": "then begin",
		"body": [
			"then begin",
			"  $2",
			"endif",
			"$0"
		],
		"description": "Then begin",
		"scope": "source.idl"
	},
	"endif-else-begin": {
		"prefix": "endif else",
		"body": [
			"else begin",
			"  $1",
			"endif",
			"$0"
		],
		"description": "Endif else begin",
		"scope": "source.idl"
	},
	"else-begin": {
		"prefix": "else",
		"body": [
			"else begin",
			"  $2",
			"endif",
			"$0"
		],
		"description": "Else begin",
		"scope": "source.idl"
	},
	"endif-else-if": {
		"prefix": "endif else if",
		"body": [
			"else if ($1) then begin",
			"  $2",
			"endif",
			"$0"
		],
		"description": "Endif else if",
		"scope": "source.idl"
	},
	"switch-statement": {
		"prefix": "switch",
		"body": [
			"switch ($1) of",
			"  ($2): begin",
			"    ${3}",
			"  end",
			"  else: begin ",
			"    ; do nothing",
			"  end",
			"endswitch",
			"$0"
		],
		"description": "Switch statement",
		"scope": "source.idl"
	},
	"switch-statement-of": {
		"prefix": "of",
		"body": [
			"of\n  $2: ${3}\n  else: \nendswitch\n$0\n"
		],
		"description": "Switch statement",
		"scope": "source.idl"
	},
	"case-statement": {
		"prefix": "case",
		"body": "case ($1) of\n  $2: ${3}\n  else:; do nothing\nendcase\n$0\n",
		"description": "Case statement",
		"scope": "source.idl"
	},
	"case-statement-of": {
		"prefix": "of",
		"body": "of\n  $2: ${3}\n  else:; do nothing\nendcase\n$0\n",
		"description": "Case statement",
		"scope": "source.idl"
	},
	"switch-case-begin":{
		"prefix": "begin",
		"body": "begin\n  $1\nend",
		"description": "Begin end statement",
		"scope": "source.idl"
	},
	"compile-opt": {
		"prefix": "comp",
		"body": "compile_opt ${1|idl2|}\n\n$0",
		"description": "compile_opt",
		"scope": "source.idl"
	},
	"function-definition": {
		"prefix": "function",
		"body": "function $1\n  compile_opt idl2\n\n  $2\nend\n$0",
		"description": "function definition",
		"scope": "source.idl"
	},
	"procedure-definition": {
		"prefix": "pro",
		"body": "pro $1\n  compile_opt idl2\n\n  $2\nend\n$0",
		"description": "procedure definition",
		"scope": "source.idl"
	},
	"class-definition": {
		"prefix": "pro",
		"body": "pro $1__define\n  compile_opt idl2, hidden\n\n  struct={$1,$\n    $2}\nend",
		"description": "IDL Class Definition",
		"scope": "source.idl"
	},
	"function-definition-envi": {
		"prefix": "function",
		"body": "function $1\n  compile_opt idl2\n\n  ; get current ENVI session\n  e = envi(/CURRENT)\n  if (e eq !NULL) then begin\n    message, 'ENVI has not started yet, required!'\n  end\n\n$2\nend",
		"description": "function definition with ENVI",
		"scope": "source.idl"
	},
	"procedure-definition-envi": {
		"prefix": "pro",
		"body": "pro $1\n  compile_opt idl2\n\n  ; get current ENVI session\n  e = envi(/CURRENT)\n  if (e eq !NULL) then begin\n    message, 'ENVI has not started yet, required!'\n  end\n\n$2\nend",
		"description": "procedure definition with ENVI",
		"scope": "source.idl"
	}
}